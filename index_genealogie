<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8" />
    <meta name="description" content=" Simulation de FALUCHE et lexique des particularités">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="Prox Acom">
    <title>FALUCHE</title>
    <link rel="icon" type="image/x-icon" href="faluche-stadium.png">
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <link rel="stylesheet" type="text/css" href="styles.css" />

</head>

<header>
    <h1 style="text-align:center;font-family:Consolas" class="logo">Faluche</h1>
</header>
<body>
    <nav class="navbar">
        <a href="#" class="active">Acceuil</a>
        <a href="index_carte.html">Carte</a>
        <a href="#">Généalogie</a>
        <a href="#">Génération 2D</a>
        <a href="#">Génération 3D</a>
        <a href="#">Liens Utiles</a>
        </a>
    </nav>
    </br></br></br></br></br></br></br></br></br>
    <div>
        <svg width="400" height="400"></svg>
        <script>
          const data = {
            name: "Moi",
            children: [
              {
                name: "Père",
                children: [
                  {
                    name: "Grand-père Paternel",
                  },
                  {
                    name: "Grand-mère Paternelle",
                  },
                ],
              },
              {
                name: "Mère",
                children: [
                  {
                    name: "Grand-père Maternel",
                  },
                  {
                    name: "Grand-mère Maternelle",
                  },
                ],
              },
            ],
          };
    
          const width = 400;
          const height = 400;
    
          const svg = d3.select("svg");
          const treeLayout = d3.tree().size([width, height]);
          const root = d3.hierarchy(data);
          const treeData = treeLayout(root);
    
          const links = treeData.links();
          const nodes = treeData.descendants();
    
          const link = svg
            .selectAll(".link")
            .data(links)
            .enter()
            .append("path")
            .attr("class", "link")
            .attr("d", (d) => {
              return `M${d.source.x},${d.source.y} L${d.target.x},${d.target.y}`;
            });
    
          const node = svg
            .selectAll(".node")
            .data(nodes)
            .enter()
            .append("g")
            .attr("class", "node")
            .attr("transform", (d) => `translate(${d.x},${d.y})`);
    
          node.append("circle").attr("r", 5);
    
          node
            .append("text")
            .attr("dy", "0.35em")
            .attr("x", (d) => (d.parent ? 10 : -10))
            .style("text-anchor", (d) => (d.parent ? "start" : "end"))
            .text((d) => d.data.name);
        </script>
        

        Une question? Une suggestion? Une contribution? Contacte moi
        <A HREF="mailto:atlos@outlook.fr">ici</A>
    </div <footer id="foot">
    <p>
        <i>FALUCHE |
            <a href="https://atlosprime.github.io/FALUCHE/" target="_blank">Code source sur Github</a> | Atlos-Prime </i>
    </p>
    </footer>
</body>

</html>